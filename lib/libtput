local t = loadfile("libt")()

local tput = {}

tput.VERSION = { 0, 0, 1, 0 }

tput.CONNECTION = {
  HOST = "localhost",
  PORT = 8080
}

local function mkUrl(append)
  return "http://" ..
    tput.CONNECTION.HOST ..
    ":" ..
    tostring(tput.CONNECTION.PORT) ..
    append
end

local function mkFileUrl(file)
  return mkUrl(
    "/files/" ..
    textutils.urlEncode(file)
  )
end

-- | Downloads a file and saves it to disk.
-- Returns a boolean representing success.
function tput.get(file)
  local result = http.get(
    mkFileUrl(file),
    {
      Accept = "*/*"
    }
  )
  if result == nil then
    return false
  end
  local h = fs.open(file, "w")
  h.write(result.readAll())
  h.close()
  return true
end

function tput.getStrict(file)
  local result = tput.get(file)
  if result then
    return result
  else
    error(
      "libtput: " .. file .. ": " ..
      "file not found."
    )
  end
end

-- invokes loadfile after downloading the file.
function tput.loadfile(file)
  tput.getStrict(file)
  return loadfile(file)
end

-- | Reads a file and uploads it to TPut.
function tput.put(file)
  -- read the file
  local h = fs.open(file, 'r')
  local text = h.readAll()
  h.close()

  -- prepare the HTTP headers
  local headers = {}
  headers["Content-type"] = "text/plain; charset=utf-8"
  headers["Accept"] = "text/plain; charset=utf-8"

  -- send the POST request
  local result = http.post(
    mkFileUrl(file),
    text,
    headers
  )

  -- return the result
  return result
end

-- the ilist and list functions are available only if libt is actually
-- present.

local t = pcall(function () return loadfile("libt")() end)

if nil ~= t then
  -- | Returns an array of strings.
  -- The dir parameter defaults to the root.
  function tput.ilist(dir)
    local headers = {}
    headers["Content-type"] = "text/plain; charset=utf-8"
    headers["Accept"] = "text/plain; charset=utf-8"

    local url = nil
    if dir == nil then
      url = mkUrl("/list")
    else
      url = mkUrl("/list/" .. textutils.urlEncode(dir))
    end

    local result = http.get(
      url, {
        Accept = "*/*",
           }
    )

    if result == nil then
      return false
    end

    local s = result.readAll()
    return t.splitBy(s, '\n')
  end

  function tput.list(...)
    return t.consume(tput.ilist(...))
  end
end

return tput

-- vim: ft=lua shiftwidth=2 expandtab colorcolumn=45

local t = loadfile("libt")()
  or error("Failed to load libt.")

local ttext = {}

ttext.VERSION = { 0, 0, 1, 0 }

-- | Changes the first character of the
-- string to uppercase.
--
-- Useful for forming the names of turtle
-- functions like "digUp".
function ttext.capitalize(str)
  return str and str:sub(1, 1):upper() .. str:sub(2)
end

ttext.characters = {
  A = {
    {1, 1, 1, 1},
    {1, 0, 0, 1},
    {1, 1, 1, 1},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
  },
  B = {
    {1, 1, 1, 0},
    {1, 0, 0, 1},
    {1, 1, 1, 0},
    {1, 0, 0, 1},
    {1, 1, 1, 0}
  },
  C = {
    {1, 1, 1},
    {1, 0, 0},
    {1, 0, 0},
    {1, 0, 0},
    {1, 1, 1}
  },
  D = {
    {1, 1, 1, 0},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {1, 1, 1, 0}
  },
  E = {
    {1, 1, 1},
    {1, 0, 0},
    {1, 1, 1},
    {1, 0, 0},
    {1, 1, 1}
  },
  F = {
    {1, 1, 1},
    {1, 0, 0},
    {1, 1, 1},
    {1, 0, 0},
    {1, 0, 0}
  },
  G = {
    {1, 1, 1, 1},
    {1, 0, 0, 0},
    {1, 0, 1, 1},
    {1, 0, 0, 1},
    {1, 1, 1, 0}
  },
  H = {
    {1, 0, 1},
    {1, 0, 1},
    {1, 1, 1},
    {1, 0, 1},
    {1, 0, 1}
  },
  I = {
    {1, 1, 1},
    {0, 1, 0},
    {0, 1, 0},
    {0, 1, 0},
    {1, 1, 1}
  },
  J = {
    {1, 1, 1},
    {0, 0, 1},
    {0, 0, 1},
    {0, 0, 1},
    {1, 1, 0}
  },
  K = {
    {1, 0, 1},
    {1, 1, 0},
    {1, 0, 0},
    {1, 1, 0},
    {1, 0, 1}
  },
  L = {
    {1, 0, 0},
    {1, 0, 0},
    {1, 0, 0},
    {1, 0, 0},
    {1, 1, 1}
  },
  M = {
    {1, 0, 0, 0, 1},
    {1, 1, 0, 1, 1},
    {1, 0, 1, 0, 1},
    {1, 0, 0, 0, 1},
    {1, 0, 0, 0, 1}
  },
  N = {
    {1, 0, 0, 1},
    {1, 1, 0, 1},
    {1, 1, 0, 1},
    {1, 0, 1, 1},
    {1, 0, 0, 1}
  },
  O = {
    {0, 1, 1, 0},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {0, 1, 1, 0}
  },
  P = {
    {1, 1, 1},
    {1, 0, 1},
    {1, 1, 1},
    {1, 0, 0},
    {1, 0, 0}
  },
  Q = {
    {0, 1, 1, 0, 0},
    {1, 0, 0, 1, 0},
    {1, 0, 0, 1, 0},
    {1, 0, 0, 1, 0},
    {0, 1, 1, 1, 1},
  },
  R = {
    {1, 1, 0},
    {1, 0, 1},
    {1, 1, 0},
    {1, 0, 1},
    {1, 0, 1}
  },
  S = {
    {1, 1, 1},
    {1, 0, 0},
    {1, 1, 1},
    {0, 0, 1},
    {1, 1, 1}
  },
  T = {
    {1, 1, 1},
    {0, 1, 0},
    {0, 1, 0},
    {0, 1, 0},
    {0, 1, 0}
  },
  U = {
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {1, 0, 0, 1},
    {0, 1, 1, 0}
  },
  V = {
    {1, 0, 1},
    {1, 0, 1},
    {1, 0, 1},
    {1, 0, 1},
    {0, 1, 0}
  },
  W = {
    {1, 0, 0, 0, 1},
    {1, 0, 0, 0, 1},
    {1, 0, 1, 0, 1},
    {1, 0, 1, 0, 1},
    {0, 1, 0, 1, 0}
  },
  X = {
    {1, 0, 1},
    {1, 0, 1},
    {0, 1, 0},
    {1, 0, 1},
    {1, 0, 1}
  },
  Y = {
    {1, 0, 1},
    {1, 0, 1},
    {0, 1, 0},
    {0, 1, 0},
    {0, 1, 0}
  },
  Z = {
    {1, 1, 1},
    {0, 0, 1},
    {0, 1, 0},
    {1, 0, 0},
    {1, 1, 1}
  },
  [" "] = {
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0}
  },
  ["."] = {
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {1, 0}
  },
  [","] = {
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 1},
    {1, 0}
  },
  ["!"] = {
    {1},
    {1},
    {1},
    {0},
    {1},
  },
}

local emptyColumn = {
  {0},
  {0},
  {0},
  {0},
  {0}
}

local function flipText(textArray)
  local result = {}
  for row in t.from(textArray) do
    table.insert(result, 1, {})
    for cell in t.from(row) do
      table.insert(result[1], 1, cell)
    end
  end
  return result
end

ttext.flip = flipText


-- | Produces a 2D array representing the
-- given string in a way that can be
-- printed to a lamp marquee.
function ttext.render(s, flip)
  local result = {
    {}, {}, {}, {}, {}
  }

  local function adjoin(char)
    t.map(
      function(tup)
        t.extend(tup[1], tup[2])
      end,
      t.zip(result, char)
    )
  end

  for c in string.gmatch(s, ".") do
    print("Rendering " .. c)
    local char = ttext.characters[c]
      or error("Unknown character " .. c)
    adjoin(char)
    adjoin(emptyColumn)
  end

  if flip then
    result = flipText(result)
  end

  return result
end

function ttext.print(rendered)
  for _, row in ipairs(rendered) do
    for _, c in ipairs(row) do
      if c == 1 then
        write('+')
      else
        write(' ')
      end
    end
    print("")
  end
  print("")
end

-- | From an image, produce an iterator that
-- emits successive frames of an animation
-- of that image shifting over by a given
-- amount each time.
function ttext.scroll(image, shiftW, windowW)
  -- create a table for each row
  local output = t.map(
    function() return {} end,
    image
  )

  local function isEmpty()
    return not t.any(output, function(row)
      return t.any(row, function(cell)
        return cell == 1
      end)
    end)
  end

  local i = 1

  return function()
    if i > #image[1] then
      if isEmpty() then
        return nil
      else
        for out in t.from(output) do
          table.insert(out, 0)
          if #out > windowW then
            table.remove(out, 1)
          end
        end
        return output
      end
    end

    for out, input in t.izip(t.from(output), t.from(image)) do
      table.insert(out, input[i])

      if #out > windowW then
        table.remove(out, 1)
      end
    end

    i = i + 1
    return output
  end
end

return ttext

-- vim: ft=lua shiftwidth=2 expandtab colorcolumn=45 tw=44

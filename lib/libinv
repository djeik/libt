-- library for dealing with a central
-- inventory

local t = loadfile('libt')()
local nbt = t.requireStrictTg('libnbt')

local inv = {}
inv.VERSION = { 0, 0, 1, 0 }

-- checks whether a given item spec matches
-- a LP ItemIdentifier
function inv.matchIID(item, iid)
  return (
    iid.getIdName() == item.idname
    and
    (item.data == nil or item.data == iid.getData())
    and
    nbt.check(item.nbt, iid.getTagCompound())
  )
end

-- | Check whether any of the items in the
-- list contains the given idname.
-- Returns how many of them we have.
function inv.lookup(item, items)
  for i, pair in ipairs(items) do
    local iid = pair.getValue1()
    local qty = pair.amount or pair.getValue2()
    if inv.matchIID(item, iid) then
      return qty, iid, i
    end
  end

  return 0
end

-- | Returns:
-- * true or false, to indicate success
-- * the quantity of the item after
-- consumption
-- * the ItemIdentifier
function inv.consume(item, count, items)
  local qty, iid, ix = inv.lookup(item, items)
  if not qty then
    error('there are no ' .. item.idname)
  end
  if qty >= count then
    items[ix].amount = qty - count
    return true, qty - count, iid, i
  end

  return false, qty, iid, i
end

return inv

-- vim: ft=lua shiftwidth=2 expandtab colorcolumn=45 tw=44
